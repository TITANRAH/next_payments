1. instalar sdk stripe
2. crear la funcion checkout donde inicia todo
3. en el archivo checkout route.ts 

'use server'

import { NextResponse } from "next/server";
import Stripe from "stripe";


const secretStripeKey = process.env.STRIPE_SECRET_KEY
const stripe = new Stripe(secretStripeKey!);

export async function POST() {
  
  // para comenzar creamos una sesion de cero, comenzando proceso de compra
  stripe.checkout.sessions.create({

  })
  return NextResponse.json({pagado: true})
}

4. ver que moneads son soportadas https://docs.stripe.com/currencies
5 . ver tarjetas que da opcion stripe https://docs.stripe.com/testing

crear pago recurrente cuando es modo subscription 

ir a stripe -> mas -> catalogo de producto -> añadir producto 

una vez recibamos el checkout hay que usar bd 

necesito crear un tunel para local no asi en produccion tunel que comunique a stripe con mi cliente ele evento de que alguien pago


si tenemos un backend funcionando en un puerto ese puerto abro en puertos de vscode para el tunel

este tunel sera una url que puedo cambiar a publico para que la vean desde otros lados

luego voy a la cunta de strapi y busco desarrolladores y pongo la yrl en el webhoook mas la ruta donde debe llegar el evento de strapi

luego elijo el evento que debe llegar a mi codigo en este caso checkot completed

eso me da un codigo al lado derecho y lo copio para llevarlo a la ruta en este caso api/webhook


1. click en boton por ejem  suscribirse o comprar 
2. se genero una session
3. recibimos la url de cambio de pagina al ingreso de datos
4. si todo va bien en cuanto al pago retorna o si cancela retorna
5. usamos tunel de vscode tunel http para recibir esa respuessta en ambient de desarollo 
6. cuand recibimos la respuesta a la url ingresada en la cuenta de stripe en este caso url generada por vscode tunel + /api/webhook 
7. al llegar el retorno a la direccion a su vez llega a mi app a traves de esa url
8. si llega el evento al webhook puedo realizar una serie de cosas como por ejem guardar data en bd 
10. usando next auth puedo tomar la session y guardar el ingresado usando prisma 
11. 


click boton -> 
orden de compra o generar session o checkout -> 
el post retorna url redirecciona a la ventana de pago -> 
si el usuario pago retorna a la vista succes -> 
la vista de la ventana de pago retorna a nuestro webhook ->
el status de la compra puede ser completado o pendiente -> 
podemos decirle que en bd guarde que esta pendiente en un campo status o en el mismo rol por ejemplp mientras este procesando el pago ->
y eso podemos leerlo en success ver si esta pendiente  o pagado ->

asiganada en el post del checkout o si pone cancelar compra 
retorna a productos -> 



nota: no olvidar habilitar el puerto y hacerlo pyblico del webhook

suscripcion y checkout es de donde redirecciona segun loq eu vendamos se usa suscripcion o checkout 

cuando trae el result de velta despues de pagar 

podremos ver en el campo mode: si es suspscrition o es payment 



para crear una empresa en ee uu y cobrar con stripe 

para constituir la empresa
stripe.com/es/atlas 

luego tenienedo la empresa constituida puedo usar esta empresa para psar a modo de prod en stripe 
y puedo utilizar multiples proyectos con estos unicos datos de la emrpesa creada 

con estos pagas los impuestos 
https://www.greenbacktaxservices.com/

con los dtos de la empresa constituida 
Mercury es un neo banco y todo es digital puedes tener una cuenta aun que no vivas en ee uu

stripe elements para estilizar botones de pago o forms

PAYPAL

paquete de backend: 

instalar sdk https://www.npmjs.com/package/@paypal/checkout-server-sdk

npm i @paypal/checkout-server-sdk

para los types en server:
npm i @types/paypal__checkout-server-sdk -D

paquete de frontend: 

https://www.npmjs.com/package/@paypal/react-paypal-js

npm i @paypal/react-paypal-js

pnemos el boton de paypal cart cart-list

primero me logeo en mi cuenta de paypal
https://www.paypal.com/myaccount

luego entro a developer y creo la app
https://developer.paypal.com/

tomamos el client id de la app creada y lo lleamo a env 

a parte de una prueba sandbox  necsitamos usuarios sandbox

testing and tools -> sandbox accounts 

puedo editar contraseña y correo 

tomo ese correo y pago con en el popup de paypal

con este correo puedo loguearme en paypal sandbox como si fuese un correo real 

es la cuenta de pryeba de un usuario sandbox que compra
testpersonal@personal123.com
Tit@n123
https://www.sandbox.paypal.com/signin

de vendedor es la misma pero con las credenciales que entrega la app creada en modo prueba 
en este caso este correo sb-2imeu16741185@business.example.com vendedor sandbox


proceso:

hago las instalaciones

pongo el boton 

llamo al carro 

paso los id de producto 

en el backend llamo a prisma y traigo los productos relacionados a esos ids 

le paso en el campo que necestia paypal los precios de los productos 


usando api d paypal 

https://developer.paypal.com/api/rest/

usando postman y las apisde paypal

el authorization tiee un post que genera el token por cierto tiempo


command alt V de json a typescript



puedo crear un producto ejem : 'tutorial x' 

puedo crear un plan o varios planes a partir del id del producfo creado 

puedo crear una subscripcion a un plan


documentacion oficial: developer.paypal.com/api/rest/



npx prisma migrate dev --name paypal_subscriptions

para agreagr webjhook en paypal ir a la cuenta original en est caso gran rah 
buscar el pryecto creado pinchar añadoir webhook y pone rla url del puerto e este caso 
de desarollo local cambiar cuando es prod

